{"version":3,"sources":["calculator-core.js","App.js","serviceWorker.js","index.js"],"names":["evaluate","arrFormula","arrPostfix","stack","forEach","item","isNumber","push","isOperator","num1","Number","parseFloat","pop","num2","result","console","log","evaluatePostfix","length","pulledItem","peekedItem","getPriority","infix2Postfix","isNotNumber","input","App","props","state","formula","afterCalculation","onDigit","bind","onOperator","onClear","onEqual","onDecimal","onParenthesis","onBackspace","digit","target","innerText","this","setState","Calculator","concat","decimal","includes","operator","parenthesis","arrayOpenParenthesis","join","match","numOpenParenthesis","arrayCloseParenthesis","numCloseParenthesis","currentInputLength","slice","finalFormula","isNaN","newHistoryItem","history","isShowHistory","number","getAttribute","AppBar","variant","color","style","background","Container","fixed","position","border","paddingTop","paddingLeft","paddingRight","width","className","TextField","type","id","value","rows","onClick","Button","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b6cf19f6.chunk.js","sourcesContent":["export function evaluate(arrFormula) {\n  const arrPostfix = infix2Postfix(arrFormula);\n  return evaluatePostfix(arrPostfix);\n}\n\nexport function isNotNumber(input) {\n  return input === '(' || input === ')' || input === '+' || input === '-' || input === '*' || input === '/' || input === '%';\n}\n\nexport function isNumber(input) {\n  return !isNotNumber(input);\n}\n\nexport function isOperator(input) {\n  return input === '+' || input === '-' || input === '*' || input === '/' || input === '%';\n}\n\nexport function getPriority(input) {\n  if (input === '+' || input === '-') return 1;\n  else if (input === '*' || input === '/' || input === '%') return 2;\n  return 0;\n}\n\nexport function infix2Postfix(arrFormula) {\n  let result = [], stack = [];\n\n  arrFormula.forEach(item => {\n    if (isNumber(item)) {\n      result.push(item);\n    } else if (item === '(') {\n      stack.push(item);\n    } else if (item === ')') {\n      while (stack.length > 0) {\n        const pulledItem = stack.pop();\n\n        if (pulledItem === '(') break;\n        else result.push(pulledItem);\n      }\n    } else if (isOperator(item)) {\n      while (stack.length > 0) {\n        const peekedItem = stack[stack.length - 1];\n\n        if (isOperator(peekedItem) && getPriority(peekedItem) >= getPriority(item)) {\n          result.push(peekedItem);\n          stack.pop();\n        } else break;\n      }\n\n      stack.push(item);\n    } else {\n      console.log(\"Something else!!!\");\n    }\n  });\n\n  while (stack.length > 0) {\n    result.push(stack.pop());\n  }\n\n  return result;\n}\n\n/* Ref: https://yinyangit.wordpress.com/2011/01/26/algorithm-chuy%E1%BB%83n-bi%E1%BB%83u-th%E1%BB%A9c-trung-t%E1%BB%91-sang-ti%E1%BB%81n-t%E1%BB%91-va-h%E1%BA%ADu-t%E1%BB%91-b%E1%BA%B1ng-stack/\n–       Nếu là toán hạng: cho ra output.\n\n–       Nếu là dấu mở ngoặc “(“: cho vào stack\n\n–       Nếu là dấu đóng ngoặc “)”: lấy các toán tử trong stack ra và cho vào output cho đến khi gặp dấu mở ngoặc “(“. (Dấu mở ngoặc cũng phải được đưa ra khỏi stack)\n\n–       Nếu là toán tử:\n\nChừng nào ở đỉnh stack là toán tử và toán tử đó có độ ưu tiên lớn hơn hoặc bằng toán tử hiện tại thì lấy toán tử đó ra khỏi stack và cho ra output.\nĐưa toán tử hiện tại vào stack\nSau khi duyệt hết biểu thức infix, nếu trong stack còn phần tử thì lấy các token trong đó ra và cho lần lượt vào output.\n */\n\nexport function evaluatePostfix(arrPostfix) {\n  let stack = [];\n\n  arrPostfix.forEach(item => {\n    if (isNumber(item)) {\n      stack.push(item);\n    } else if (isOperator(item)) {\n      const num1 = Number.parseFloat(stack.pop()), num2 = Number.parseFloat(stack.pop());\n      let result = '';\n\n      switch (item) {\n        case '+':\n          result = num2 + num1;\n          break;\n        case '-':\n          result = num2 - num1;\n          break;\n        case '*':\n          result = num2 * num1;\n          break;\n        case '/':\n          result = num2 / num1;\n          break;\n        case '%':\n          result = num2 % num1;\n          break;\n        default:\n          console.log('Something else!!!');\n      }\n\n      stack.push(result + '');\n    } else {\n      console.log(\"Something else!!!\");\n    }\n  });\n\n  return Number.parseFloat(stack[0]);\n}\n\n/* Ref: https://yinyangit.wordpress.com/2011/01/27/algorithm-tinh-gia-tri-bieu-thuc-tien-to-va-hau-to/\nLặp qua các token của của biểu thức postfix từ trái qua phải:\n\n–       Nếu là toán hạng: push vào stack\n\n–       Nếu là toán tử: pop hai toán hạng trong stack ra và tính giá trị của chúng dựa vào toán tử này. Push kết quả đó lại vào stack.\n\nPhần tử còn sót lại trong stack sau vòng lặp chính là kết quả của biểu thức.\n*/","import React,{Component} from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport * as Calculator from './calculator-core';\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      formula: [],\n      input: '0',\n      afterCalculation: false\n    }\n    this.onDigit = this.onDigit.bind(this);\n    this.onOperator = this.onOperator.bind(this);\n    this.onClear = this.onClear.bind(this);\n    this.onEqual = this.onEqual.bind(this);\n    this.onDecimal = this.onDecimal.bind(this);\n    this.onParenthesis = this.onParenthesis.bind(this);\n    this.onBackspace = this.onBackspace.bind(this);\n  }\n\n  onDigit({ target }) {\n    const digit = target.innerText;\n    const input = this.state.input;\n\n    if (this.state.afterCalculation) {\n      this.setState({\n        input: digit,\n        afterCalculation: false\n      });\n    } else if (input === '0') {\n      this.setState({\n        input: digit\n      });\n    } else if (Calculator.isNotNumber(input)) {\n      this.setState({\n        input: digit,\n        formula: this.state.formula.concat(input)\n      });\n    } else {\n      this.setState({\n        input: input.concat(digit)\n      });\n    }\n  }\n\n  onDecimal({ target }) {\n    const decimal = target.innerText;\n    const input = this.state.input;\n\n    if (this.state.afterCalculation) {\n      this.setState({\n        input: `0${decimal}`,\n        afterCalculation: false\n      });\n    } else if (Calculator.isNotNumber(input)) {\n      this.setState({\n        input: `0${decimal}`,\n        formula: this.state.formula.concat(input)\n      });\n    } else if (!input.includes(decimal)) {\n      this.setState({\n        input: input.concat(decimal),\n      });\n    }\n  }\n\n  onOperator({ target }) {\n    const operator = target.innerText;\n    const input = this.state.input;\n\n    if (Calculator.isOperator(input)) {\n      this.setState({\n        input: operator,\n        afterCalculation: false\n      });\n    } else if (input !== '(') {\n      this.setState({\n        formula: this.state.formula.concat(this.state.input),\n        input: operator,\n        afterCalculation: false\n      });\n    }\n  }\n\n  onParenthesis({ target }) {\n    const parenthesis = target.innerText;\n    const input = this.state.input;\n\n    if (parenthesis === '(') {\n      if ((Calculator.isNumber(input) && input !== '0') ||\n        (Calculator.isNumber(input) && input === '0' && this.state.formula.length > 0) ||\n        input === ')') {\n        this.setState({\n          input: parenthesis,\n          formula: this.state.formula.concat([input, '*']),\n          afterCalculation: false\n        });\n      } else if (Calculator.isOperator(input) || input === '(') {\n        this.setState({\n          input: parenthesis,\n          formula: this.state.formula.concat(input),\n          afterCalculation: false\n        });\n      } else if (Calculator.isNumber(input) && input === '0' && this.state.formula.length === 0) {\n        this.setState({\n          input: parenthesis,\n          afterCalculation: false\n        });\n      }\n    } else {\n      const arrayOpenParenthesis = this.state.formula.join(\"\").match(/\\(/g);\n      const numOpenParenthesis = arrayOpenParenthesis ? arrayOpenParenthesis.length : 0;\n\n      const arrayCloseParenthesis = this.state.formula.join(\"\").match(/\\)/g);\n      const numCloseParenthesis = arrayCloseParenthesis ? arrayCloseParenthesis.length : 0;\n\n      if ((Calculator.isNumber(input) || input === ')') && numOpenParenthesis > 0 && numOpenParenthesis > numCloseParenthesis) {\n        this.setState({\n          input: parenthesis,\n          formula: this.state.formula.concat(input),\n          afterCalculation: false\n        });\n      }\n    }\n  }\n\n  onClear() {\n    this.setState({\n      formula: [],\n      input: '0',\n      afterCalculation: false\n    });\n  }\n\n  onBackspace() {\n    const input = this.state.input;\n    const formula = this.state.formula;\n    const currentInputLength = input.length;\n\n    if (input === 'Infinity' || input === '-Infinity' || input === 'NaN') {\n      this.setState({\n        input: '0',\n        afterCalculation: false\n      });\n    } else if (currentInputLength > 1) {\n      this.setState({\n        input: input.slice(0, currentInputLength - 1),\n        afterCalculation: false\n      });\n    } else if (input !== '0') {\n      this.setState({\n        input: '0',\n        afterCalculation: false\n      });\n    } else if (formula.length > 0) {\n      this.setState({\n        input: formula[formula.length - 1],\n        formula: formula.slice(0, formula.length - 1),\n        afterCalculation: false\n      });\n    }\n  }\n\n  onEqual() {\n    const finalFormula = this.state.formula.concat(this.state.input);\n    const result = Calculator.evaluate(finalFormula);\n\n    if (!Number.isNaN(result)) {\n      const newHistoryItem = {\n        formula: finalFormula,\n        result: result\n      }\n\n      this.setState({\n        input: result + \"\",\n        formula: [],\n        history: [].concat(newHistoryItem, this.state.history),\n        afterCalculation: true\n      });\n    }\n  }\n\n  onHistory() {\n    this.setState({\n      isShowHistory: !this.state.isShowHistory\n    });\n  }\n\n  onClearHistory() {\n    this.setState({\n      history: []\n    });\n  }\n\n  onHistoryItemClicked({ target }) {\n    const number = target.getAttribute(\"value\");\n    const input = this.state.input;\n\n    if (Calculator.isNumber(input)) {\n      this.setState({\n        input: number\n      });\n    } else {\n      this.setState({\n        input: number,\n        formula: this.state.formula.concat(input)\n      });\n    }\n  }\n  render() {\n    return (\n\n      <div><AppBar variant=\"contained\" color=\"secondary\" style={{\nbackground:\"linear-gradient(45deg, #06beb6 60%, #48b1bf 70%)\"}}><h2>CALCULATOR</h2></AppBar><br/>\n    <br/>\n<br/><br/>\n<Container fixed style={{background:\"linear-gradient(45deg, #06beb6 60%, #48b1bf 70%)\" ,\nposition:\"absolute\",border:\"solid\",paddingTop:\"50px\",paddingLeft:\"25px\",paddingRight:\"0px\",width:\"320px\"}}>\n\n        <div className=\"calculator\">\n        <div className=\"display-toolbar\">\n        <form className=\"display\">\n          <TextField variant=\"outlined\" type=\"number\" className=\"display-formula\" id=\"f\"  value={this.state.formula} ></TextField>\n          <TextField variant=\"outlined\" type=\"number\" className=\"display-input\" id=\"display\" rows=\"1\"  value={this.state.input}></TextField>\n        </form>\n        <div className=\"toolbar\">\n                  <div>\n            <span className=\"toolbar-item\" onClick={this.state.onBackspace} id=\"backspace\"><i className=\"fas fa-backspace\"></i></span>\n          </div>\n        </div>\n      \n<div className=\"buttons\">\n        <Button variant=\"outlined\" id=\"parenthesis-open\" onClick={this.onParenthesis}>(</Button>\n        <Button variant=\"outlined\" id=\"parenthesis-close\" onClick={this.onParenthesis}>)</Button>\n        <Button variant=\"outlined\" id=\"modulo\" onClick={this.onOperator}>%</Button>\n        <Button variant=\"outlined\" id=\"clear\" onClick={this.onClear}>AC</Button>\n<br/>\n        <Button variant=\"outlined\" id=\"seven\" onClick={this.onDigit}>7</Button>\n        <Button variant=\"outlined\" id=\"eight\" onClick={this.onDigit}>8</Button>\n        <Button variant=\"outlined\" id=\"nine\" onClick={this.onDigit}>9</Button>\n        <Button variant=\"outlined\" id=\"divide\" onClick={this.onOperator}>/</Button>\n<br/>\n        <Button variant=\"outlined\" id=\"four\" onClick={this.onDigit}>4</Button>\n        <Button variant=\"outlined\" id=\"five\" onClick={this.onDigit}>5</Button>\n        <Button variant=\"outlined\" id=\"six\" onClick={this.onDigit}>6</Button>\n        <Button variant=\"outlined\" id=\"multiply\" onClick={this.onOperator}>*</Button>\n<br/>\n        <Button variant=\"outlined\" id=\"one\" onClick={this.onDigit}>1</Button>\n        <Button variant=\"outlined\" id=\"two\" onClick={this.onDigit}>2</Button>\n        <Button variant=\"outlined\" id=\"three\" onClick={this.onDigit}>3</Button>\n        <Button variant=\"outlined\" id=\"subtract\" onClick={this.onOperator}>-</Button>\n<br/>\n        <Button variant=\"outlined\" id=\"zero\" onClick={this.onDigit}>0</Button>\n        <Button variant=\"outlined\" id=\"decimal\" onClick={this.onDecimal}>.</Button>\n        <Button variant=\"outlined\" id=\"equals\" onClick={this.onEqual}>=</Button>\n        <Button variant=\"outlined\" id=\"add\" onClick={this.onOperator}>+</Button>\n      </div>\n        </div>\n        </div></Container></div>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}